{"version":3,"sources":["app/instructor_list.cljc"],"mappings":";AAOA,AACA,AAEA","names":[],"sourcesContent":["(ns app.instructor-list\n  (:require [hyperfiddle.electric :as e]\n            [hyperfiddle.electric-dom2 :as dom]\n            [hyperfiddle.history :as router]\n            #?(:clj [datomic.client.api :as dt])))\n\n\n(e/def conn)\n(e/def db)\n\n(e/defn InstructorList []\n        (e/server\n          (binding [conn @(requiring-resolve 'user/datomic-conn)]\n            (binding [db (dt/db conn)]\n             (e/client\n               (dom/h1 (dom/text \"Instructor List\"))\n               (dom/div\n                 (dom/table\n                   (dom/th  (dom/text \"Name\"))\n                   (dom/th  (dom/text \"Department\"))\n                   (dom/th  (dom/text \"Courses\"))\n                   (e/for [value (e/server (dt/q '[:find (pull ?e [*])\n                                                   :where [?e :instructor/id _]] db))]\n                          (dom/tr\n                            (dom/td (dom/props {:word-wrap :break-word}) (dom/text (:instructor/name (first value))))\n                            (dom/td (dom/props {:word-wrap :break-word}) (dom/text (ffirst (e/server (dt/q '[:find ?name\n                                                                                                             :in $ ?dept-id\n                                                                                                             :where [?dept-id :department/name ?name]] db (:db/id (first (:instructor/department (first value)))))))))\n                            (dom/td (dom/props {:word-wrap :break-word}) (dom/text  (e/server (dt/q '[:find ?name\n                                                                                                        :in $ ?instructor-id\n                                                                                                        :where [?e :course/instructor ?instructor-id]\n                                                                                                        [?e :course/name ?name]] db (:db/id (first value)))))))))))))))\n\n\n\n"]}