{"version":3,"sources":["app/poms_07_app_20230915.cljc"],"mappings":";AAUA,AACA,AAkDA","names":[],"sourcesContent":["(ns app.poms-07-app-20230915\n  (:require contrib.str\n            [hyperfiddle.electric :as e]\n            [hyperfiddle.electric-dom2 :as dom]\n    ;datomic require'\u0131 asag\u0131daki\n            #?(:clj [datomic.client.api :as d])\n            [hyperfiddle.electric-ui4 :as ui]\n            ))\n\n;; bu k\u0131s\u0131mda zorunlu\n(e/def conn)\n(e/def db)\n;; bu k\u0131s\u0131mda zorunlu\n\n#?(:clj (defn get-company-id-by-name [str-name db]\n          (ffirst (d/q\n                    '[:find ?id\n                      :in $ ?name\n                      :where\n                      [?e :company/brand-name ?name]\n                      [?e :company/id ?id]\n                      ]\n                    db str-name)\n                  )\n          )\n   )\n\n\n#?(:clj (defn get-entity-id-by-enum [enum db]\n          (ffirst (d/q\n                    '[:find ?e\n                      :in $ ?enum\n                      :where\n                      [?e :db/ident ?enum]\n                      ]\n                    db enum)\n                  )\n          )\n   )\n\n#?(:clj (defn get-free-proposal-id [db] (if (empty? (d/q\n                                                      '[:find ?e\n                                                        :where\n                                                        [_ :proposal/id ?e]]\n                                                      db)\n                                                    )\n                                          1\n                                          (+ 1 (ffirst (take 1 (reverse (->> (d/q\n                                                                               '[:find ?e\n                                                                                 :where\n                                                                                 [_ :proposal/id ?e]]\n                                                                               db)\n                                                                             (sort-by last)\n                                                                             )\n                                                                        )\n                                                             )\n                                                       )\n                                             )\n                                          )\n          )\n   )\n(e/defn app-page []\n        (e/server\n          (binding [conn @(requiring-resolve 'user/datomic-conn)]\n            (binding [db (d/db conn)]\n              ;bind etmek zorunday\u0131z dbyi cal\u0131st\u0131rmak i\u00e7in.\n              (e/client\n                (let [!state (atom {\n                                    :category        \"\"\n                                    :rfp-id          \"\"\n                                    :supplier-id     \"\"\n                                    :amount          \"\"\n                                    :project-id      \"\"\n                                    :item-amount     \"\"\n                                    :btn1-is-clicked false\n                                    :login-info      \"Welcome! Colabio makes life easier...\"\n                                    })\n                      category (get (e/watch !state) :category)\n                      rfp-id (get (e/watch !state) :rfp-id)\n                      supplier-id (get (e/watch !state) :supplier-id)\n                      amount (get (e/watch !state) :amount)\n                      item-amount (get (e/watch !state) :item-amount)\n                      proposal-id (e/server (get-free-proposal-id db))\n                      btn-state (get (e/watch !state) :btn1-is-clicked)\n                      ]\n\n                  (dom/element \"style\" (dom/text \"\n                  ul{list-style-type: none; margin: 0; padding: 0; background-color: black; overflow: auto; }\n                  li {float: left;}\n                  li a {color: white; padding: 15px 25px; display: inline-block; text-align: center; text-decoration: none;}\n                  .home {background-color: darkred;}\n                  li a:hover {\n                  background-color: #405d27; }\n                  table, th, td {border: 0.2px solid;}\n                  \"))\n                  (dom/ul (dom/props {:class \"ul\"})\n                          (dom/li\n                            (dom/a (dom/props {:class \"home\" :href \"http://localhost:8080/\"})\n                                   (dom/text \"Home\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-00-signup-20230831!signup-page)\"})\n                                   (dom/text \"Sign Up\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-01-login-20230828!login-page)\"})\n                                   (dom/text \"Log In\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-02-cp-20230830!create-project)\"})\n                                   (dom/text \"Create Project\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-03-crfp-20230906!create-rfp)\"})\n                                   (dom/text \"Create Rfp\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-04-sif-20230907!sif-page)\"})\n                                   (dom/text \"Supplier Information Screen\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-05-addcompany-20230907!add-company)\"})\n                                   (dom/text \"Add New Company\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-06-ph-20230915!ph-page)\"})\n                                   (dom/text \"Project Highlights\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-07-app-20230915!app-page)\"})\n                                   (dom/text \"Add New Proposal\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-08-ap-20230918!approve-proposal)\"})\n                                   (dom/text \"Approve Proposal\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-09-ot-20230920!operation-track-page)\"})\n                                   (dom/text \"Operation Track\")))\n                          )\n\n                  (dom/div (dom/props {:style {:float \"left\" :overflow \"auto\"}})\n                           (dom/form\n                             (dom/props {:il       \"FORM\"\n                                         :onSubmit \"false\"\n                                         })\n                             (dom/fieldset\n                               (dom/props {:name \"FORM\"\n                                           })\n                               (dom/legend\n                                 (dom/text \"Add New Proposal\")\n                                 (dom/props {:style {:text-align \"center\"}}))\n                               (dom/p (dom/props {:style {:padding-bottom \"20px\" :margin-top \"0\" :margin-left \"40%\"}}) (dom/text \" Aktif RFPler: \"))\n                               (dom/label (dom/props {:for \"dropdown\"}) (dom/text \"Categoriye g\u00f6re filtrelemek i\u00e7in se\u00e7iniz...\" (dom/props {:style {:font-style \"none\"}})))\n                               (dom/select (dom/props {:id \"dropdown\"})\n                                           (dom/option (dom/props {:disabled \"true\" :selected \"false\"})\n                                                       (dom/text \"\"))\n                                           (dom/option (dom/props {:value \"bilgisayar\"})\n                                                       (dom/text \"Bilgisayar\"))\n                                           (dom/option (dom/props {:value \"seyahat\"})\n                                                       (dom/text \"Seyahat\"))\n                                           (dom/option (dom/props {:value \"konaklama\"})\n                                                       (dom/text \"Konaklama\"))\n                                           (dom/on \"change\" (fn [] (swap! !state assoc :category (keyword \"service\" (str (.-value dom/node))))))\n                                           )\n                               (dom/div (dom/props {:style {:position \"relative\" :top \"50%\" :left \"0%\" :overflow \"auto\" :height \"300px\"}})\n                                        (dom/table\n                                          (dom/tr\n                                            (dom/th (dom/text \"General Information for\"))\n                                            (dom/th (dom/text \"Attributes\"))\n                                            (dom/th (dom/text \"Detailed Informations\"))\n                                            )\n                                          (e/for [[rfp-id rfp-name rfp-item-amount rfp-category rfp-explanation]\n                                                  (e/server\n                                                    (binding [conn @(requiring-resolve 'user/datomic-conn)]\n                                                      (binding [db (d/db conn)]\n                                                        (d/q\n                                                          '[:find ?id ?name ?item-amount ?rfp-category ?prj-title\n                                                            :in $ ?ctg\n                                                            :where\n                                                            [?rfpe :rfp/category ?ctg]\n                                                            [?rfpe :rfp/id ?id]\n                                                            [?rfpe :rfp/name ?name]\n                                                            [?rfpe :rfp/category ?ctgeid]\n                                                            [?ctgeid :db/ident ?rfp-category]\n                                                            [?rfpe :rfp/item-amount ?item-amount]\n                                                            [?rfpe :rfp/project-id ?project-id]\n                                                            [?project-id :project/project-title ?prj-title]\n                                                            ]\n                                                          db (get-entity-id-by-enum category db))\n                                                        )\n                                                      )\n                                                    )\n                                                  ]\n\n                                                 (dom/tr\n                                                   (dom/td (dom/props {:rowspan 5}) (dom/text \"Rfp: \"))\n                                                   (dom/td (dom/text \"RFP Id\"))\n                                                   (dom/td (dom/text rfp-id))\n                                                   )\n                                                 (dom/tr\n                                                   (dom/td (dom/text \"Name\"))\n                                                   (dom/td (dom/text rfp-name))\n                                                   )\n                                                 (dom/tr\n                                                   (dom/td (dom/text \"Item Amount\"))\n                                                   (dom/td (dom/text rfp-item-amount))\n                                                   )\n                                                 (dom/tr\n                                                   (dom/td (dom/text \"Category\"))\n                                                   (dom/td (dom/text (case rfp-category\n                                                                       :service/bilgisayar  \"Bilgisayar\"\n                                                                       :service/seyahat \"Seyahat\"\n                                                                       :service/konaklama \"Konaklama\"\n                                                                       )))\n                                                   )\n                                                 (dom/tr\n                                                   (dom/td (dom/text \"Details\"))\n                                                   (dom/td (dom/text rfp-explanation))\n                                                   )\n                                                 )\n                                          )\n                                        )\n\n                               (dom/div (dom/props {:style {:overflow \"auto\" :height \"300px\"}})\n                                        (dom/p (dom/text \"RFP id:\" (dom/props {:class \"text\"\n                                                                               }))\n                                               (ui/input rfp-id\n                                                         (e/fn [v] (swap! !state assoc :rfp-id v))\n                                                         (dom/props {:style {:name \"rfp-id\"}})\n                                                         )\n                                               )\n                                        (dom/p (dom/text \"Supplier company name:\" (dom/props {:class \"text\"\n                                                                                              }))\n                                               (ui/input supplier-id\n                                                         (e/fn [v] (swap! !state assoc :supplier-id v))\n                                                         (dom/props {:style {:name \"supplier-id\"}})\n                                                         ))\n                                        (dom/p (dom/text \"amount:\" (dom/props {:class \"text\"\n                                                                               }))\n                                               (ui/input amount\n                                                         (e/fn [v] (swap! !state assoc :amount v))\n                                                         (dom/props {:style {:name \"amount\"}})\n                                                         ))\n                                        (dom/p (dom/text \"Item amount:\" (dom/props {:class \"text\"\n                                                                                    }))\n                                               (ui/input item-amount\n                                                         (e/fn [v] (swap! !state assoc :item-amount v))\n                                                         (dom/props {:style {:name \"Item amount\"}})\n                                                         ))\n                                        )\n\n\n                               (dom/div (dom/props {:style {:margin-left \"20%\"}})\n                                        (ui/button\n                                          (e/fn []\n                                                (e/server\n                                                  (let [[project-id client-company client-person _]\n\n                                                        (first (d/q\n                                                                 '[:find ?pid ?cid ?uid ?rfpia\n                                                                   :in $ ?rfpid\n                                                                   :where\n                                                                   [?e :rfp/id ?rfpid]\n                                                                   [?e :rfp/item-amount ?rfpia]\n                                                                   [?e :rfp/project-id ?peid]\n                                                                   [?peid :project/id ?pid]\n                                                                   [?peid :project/client-company-id ?ccid]\n                                                                   [?ccid :company/id ?cid]\n                                                                   [?peid :project/client-user-id ?cuid]\n                                                                   [?cuid :user/id ?uid]\n                                                                   ]\n                                                                 db (read-string rfp-id)))\n                                                        ]\n                                                    (d/transact conn {:tx-data [{:proposal/id             (e/server\n                                                                                                            (binding [conn @(requiring-resolve 'user/datomic-conn)]\n                                                                                                              (binding [db (d/db conn)]\n                                                                                                                (get-free-proposal-id db)\n                                                                                                                )\n                                                                                                              )\n                                                                                                            )\n                                                                                 :proposal/supplier-id    [:company/id (get-company-id-by-name supplier-id db)]\n                                                                                 :proposal/amount         (read-string amount)\n                                                                                 :proposal/project-id     [:project/id project-id]\n                                                                                 :proposal/item-amount    (read-string item-amount)\n                                                                                 :proposal/order-status   :proposal-status/waiting\n                                                                                 :proposal/client-company [:company/id client-company]\n                                                                                 :proposal/client-person  [:user/id client-person]\n                                                                                 }\n                                                                                ]})\n                                                    ))\n                                                )\n                                          (dom/on \"click\" (fn [_] (swap! !state assoc :btn1-is-clicked true)))\n                                          (dom/text \"Add Proposal\")\n                                          (dom/props {:type  \"button\"\n                                                      :class \"button1\"\n                                                      :name  \"login-button\"\n                                                      :style {:text-align \"center\" :margin-left \"50px\" :padding-left \"45px\" :padding-right \"45px\"}\n                                                      })\n                                          )\n\n                                        (if btn-state\n                                          (case (clojure.string/blank? (e/server\n                                                                         (binding [conn @(requiring-resolve 'user/datomic-conn)]\n                                                                           (binding [db (d/db conn)]\n                                                                             (ffirst (d/q\n                                                                                       '[:find ?e\n                                                                                         :in $ ?id\n                                                                                         :where\n                                                                                         [?e :proposal/id ?id]]\n                                                                                       db proposal-id))\n                                                                             )\n                                                                           )\n                                                                         ))\n                                            false ((swap! !state assoc :login-info \"Proposal created...\")\n                                                   (swap! !state assoc :btn1-is-clicked false)\n                                                   (swap! !state assoc :rfp-id \"\")\n                                                   (swap! !state assoc :supplier-id \"\")\n                                                   (swap! !state assoc :item-amount \"\")\n                                                   (swap! !state assoc :amount \"\")\n                                                   (.setTimeout js/window #(swap! !state assoc :login-info \"Welcome! Colabio makes life easier...\" ) 1000))\n                                            true ((swap! !state assoc :login-info \"Check given parameters!!\")\n                                                  (swap! !state assoc :btn1-is-clicked false))\n                                            )\n                                          )\n\n                                        (dom/p (dom/text (get (e/watch !state) :login-info)\n                                                         (dom/props {:class      \"login-info\"\n                                                                     :name       \"login-text\"\n                                                                     :text-align \"center\"\n                                                                     })))\n                                        )\n\n                               )\n                             )\n                           )\n                  )\n                )\n              )\n            )\n          )\n        )\n"]}