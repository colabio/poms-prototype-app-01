{"version":3,"sources":["contrib/rfc3986.cljc"],"mappings":"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","names":["contrib.rfc3986/-sub-delims","contrib.rfc3986/-unreserved","clojure.set.union","cljs.core/set","cljs.core.map","cljs.core/char","contrib.rfc3986/-pchar","contrib.rfc3986/encode-pchar","s","c","contrib.char$/char->hex-str","clojure.string.join","contrib.rfc3986/decode-pchar","G__46463","vec__46465","seq__46466","cljs.core/seq","first__46467","cljs.core/first","cljs.core/next","vec__46477","seq__46478","first__46479","decoded","ss","cljs.core/not","cljs.core._EQ_","contrib.char$/char-code","cljs.core.conj","contrib.char$/hex-str->char","cljs.core.take","cljs.core.drop","contrib.rfc3986/generated__contrib_rfc3986_41","js/contrib","js/contrib.rfc3986","js/contrib.rfc3986.t_contrib$rfc398646716","contrib.rfc3986/t_contrib$rfc398646716","_46718","meta46717","cljs.core/PROTOCOL_SENTINEL","unused__14959__auto__","self__","G__46735","js/Error","args46729","cljs.core/aclone","done-46696","___14619__auto__","RCF__done!","hyperfiddle.rcf/async-notifier","cljs.test.update_current_env_BANG_","cljs.core/conj","values__10703__auto__","cljs.core/List","result__10704__auto__","cljs.core.apply","hyperfiddle.rcf/=","cljs.test/do-report","cljs.core/cons","t__10691__auto__","e46743","e46749","e46769","e46784","e46800","cljs.test/update-current-env!","cljs.core/rest","this__5330__auto__","writer__5331__auto__","opt__5332__auto__","cljs.core/-write","contrib.rfc3986/->t_contrib$rfc398646716","hyperfiddle.rcf/*enabled*","cljs.test/run-block","cljs.test/test-var-block*","cljs.core.comp"],"sourcesContent":["(ns contrib.rfc3986\n  (:require clojure.set\n            [clojure.string :as string]\n            [contrib.char$ :refer [char-code char->hex-str hex-str->char]]\n            [hyperfiddle.rcf :refer [tests]]))\n\n; https://tools.ietf.org/html/rfc3986#appendix-A\n;\n; pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n; unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n; sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n\n(def -sub-delims #{\\! \\$ \\& \\' \\( \\) \\* \\+ \\, \\; \\=})\n(def -unreserved (clojure.set/union (set (map char \"abcdefghijklmnopqrstuvwxyz\"))\n                                    (set (map char \"0123456789\"))\n                                    #{\\- \\. \\_ \\~}))\n(def -pchar (clojure.set/union -unreserved -sub-delims #{\\: \\@}))\n\n(defn encode-pchar\n  \"percent-encode a url path segment without over-encoding (which many platform url decoders do).\n  Notably, this impl is compatible with java.net.URI which fails on some chars in the 'unwise set',\n  which are probably safe today.\"\n  [s]\n  (->> s\n       (map (fn [c]\n              (if (-pchar c) ; whitelist\n                c\n                (str \"%\" (char->hex-str c)))))\n       (string/join)))\n\n(defn decode-pchar [s]\n  (-> (loop [decoded []\n             [c & ss] s]\n        (if-not c\n          decoded ; done\n          (if (= 37 (char-code c)) ; 37 is \\% written portably\n            (recur (conj decoded (hex-str->char (string/join (take 2 ss)))) (drop 2 ss))\n            (recur (conj decoded c) ss))))\n      string/join))\n\n(tests\n  \"pchar encoding and decoding\"\n  (encode-pchar \"google-oauth2|116635422485042503270\")\n  := \"google-oauth2%7C116635422485042503270\"\n\n  (decode-pchar \"google-oauth2%7C116635422485042503270\")\n  := \"google-oauth2|116635422485042503270\"\n\n  \"non-ascii characters\"\n  (encode-pchar \"!$&'[]()*+,;=|\") := \"!$&'%5B%5D()*+,;=%7C\"\n  (decode-pchar \"!$&'%5B%5D()*+,;=%7C\") := \"!$&'[]()*+,;=|\"\n\n  \"bijection\"\n  ((comp decode-pchar encode-pchar) \"google-oauth2|116635422485042503270\")\n  := \"google-oauth2|116635422485042503270\"\n\n  ;\"unicode\" ; broken, not sure why\n  ;(encode-rfc3986-pchar \"\uc704\ud0a4\ubc31\uacfc:\ub300\ubb38\") := \"%4%4%1%C:%0%8\"\n  ;(decode-rfc3986-pchar \"%4%4%1%C:%0%8\") := \"\uc704\ud0a4\ubc31\uacfc:\ub300\ubb38\"\n  ;((comp decode-rfc3986-pchar encode-rfc3986-pchar) \"\uc704\ud0a4\ubc31\uacfc:\ub300\ubb38\")\n  )\n"]}