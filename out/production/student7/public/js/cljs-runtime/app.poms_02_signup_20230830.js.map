{"version":3,"sources":["app/poms_02_signup_20230830.cljc"],"mappings":";AAYA,AACA,AAyEA","names":[],"sourcesContent":["(ns app.poms-02-signup-20230830\n  (:require contrib.str\n            [datascript.core :as d]\n            [hyperfiddle.electric :as e]\n            [hyperfiddle.electric-dom2 :as dom]\n    ;datomic require'\u0131 asag\u0131daki\n            #?(:clj [datomic.client.api :as d])\n            [hyperfiddle.electric-ui4 :as ui]\n            ))\n\n\n;; bu k\u0131s\u0131mda zorunlu\n(e/def conn)\n(e/def db)\n;; bu k\u0131s\u0131mda zorunlu\n\n\n#?(:clj (defn get-free-project-id [db]\n          (+ 1 (ffirst (take 1 (reverse (->> (d/q\n                                               '[:find ?e\n                                                 :where\n                                                 [_ :project/id ?e]]\n                                               db)\n                                             (sort-by last)\n                                             )\n                                        )\n                             )\n                       )\n             )\n          )\n   )\n\n#?(:clj (defn add-project [map db conn]\n          (d/transact conn {:tx-data [{:project/id                (get map :id)\n                                       :project/client-user-id    (get map :client-user-id)\n                                       :project/client-company-id (get map :client-company-id)\n                                       :project/phonenumber       (get map :clientphonenumber)\n                                       :project/project-title     (get map :project-title)\n                                       :project/project-sd        (get map :projectstartingdate)\n                                       :project/project-fd        (get map :projectfinishingdate)\n                                       :project/documents         (get map :documents)\n                                       }\n                                      ]})\n          (def db (d/db conn))\n          )\n   )\n\n#?(:clj (defn get-user-id-by-name [str-name db]\n          (ffirst (d/q\n                    '[:find ?e\n                      :in $ ?ent\n                      :where\n                      [?ent :user/id ?e]\n                      ]\n                    db (ffirst (d/q\n                                 '[:find ?e\n                                   :in $ ?name\n                                   :where\n                                   [?e :user/name ?name]\n                                   ]\n                                 db str-name)\n                               ))\n                  )\n          )\n   )\n\n#?(:clj (defn get-company-id-by-name [str-name db]\n          (ffirst (d/q\n                    '[:find ?e\n                      :in $ ?ent\n                      :where\n                      [?ent :company/id ?e]\n                      ]\n                    db (ffirst (d/q\n                                 '[:find ?e\n                                   :in $ ?name\n                                   :where\n                                   [?e :company/brand-name ?name]\n                                   ]\n                                 db str-name)\n                               ))\n                  )\n          )\n   )\n\n\n(e/defn deneme []\n        (e/server\n          (binding [conn @(requiring-resolve 'user/datomic-conn)]\n            (binding [db (d/db conn)]\n              ;bind etmek zorunday\u0131z dbyi cal\u0131st\u0131rmak i\u00e7in.\n              (e/client\n                (let [!state (atom {\n                                    :id            \"\"\n                                    :username      \"\"\n                                    :company       \"\"\n                                    :phone-number  \"\"\n                                    :project-title \"\"\n                                    :start-date    \"\"\n                                    :finish-date   \"\"\n                                    :docs          \"\"\n                                    })\n                      username (get (e/watch !state) :username)\n                      company (get (e/watch !state) :company)\n                      phone-number (get (e/watch !state) :phone-number)\n                      project-title (get (e/watch !state) :project-title)\n                      start-date (get (e/watch !state) :start-date)\n                      finish-date (get (e/watch !state) :finish-date)\n                      docs (get (e/watch !state) :docs)\n                      ]\n                  (dom/element \"style\" (dom/text \"\n                  ul{list-style-type: none; margin: 0; padding: 0; background-color: black; overflow: auto; }\n                  li {float: left;}\n                  li a {color: white; padding: 15px 25px; display: inline-block; text-align: center; text-decoration: none;}\n                  .home {background-color: darkred;}\n                  li a:hover {\n                  background-color: #405d27;\n                  }\"))\n                  (dom/ul (dom/props {:class \"ul\"})\n                          (dom/li\n                            (dom/a (dom/props {:class \"home\" :href \"http://localhost:8080/\"})\n                                   (dom/text \"Home\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-02-createprojectpage-20230901!create-project)\"})\n                                   (dom/text \"Create Project\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"#contact\"})\n                                   (dom/text \"contact\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"#about\"})\n                                   (dom/text \"about\")))\n                          )\n\n                  (dom/div\n                    (dom/form\n                      (dom/props {:class \"form\"\n                                  :il    \"FORM\"\n                                  })\n                      (dom/fieldset\n                        (dom/props {:name \"FORM\"\n                                    })\n                        (dom/legend\n                          (dom/text \"Create Project\")\n                          (dom/props {:style {:text-align \"center\"}}))\n                        (dom/p (dom/text \"username:\" (dom/props {:class \"text\"\n                                                                 }))\n                               (ui/input username\n                                         (e/fn [v] (swap! !state assoc :username v))\n                                         (dom/on \"keyup\" (e/fn [keyup]\n                                                               (when-some [givenValue (contrib.str/empty->nil (->\n                                                                                                                keyup\n                                                                                                                .-target\n                                                                                                                .-value))]\n                                                                 (swap! !state assoc :button1 givenValue)\n                                                                 )))\n                                         (dom/props {:style {:name \"username\"}})\n                                         )\n                               )\n                        (dom/p (dom/text \"company:\" (dom/props {:class \"text\"\n                                                                }))\n                               (ui/input company\n                                         (e/fn [v] (swap! !state assoc :company v))\n                                         (dom/on \"keyup\" (e/fn [keyup]\n                                                               (when-some [givenValue (contrib.str/empty->nil (->\n                                                                                                                keyup\n                                                                                                                .-target\n                                                                                                                .-value))]\n                                                                 (swap! !state assoc :button1 givenValue)\n                                                                 )))\n                                         (dom/props {:style {:name \"password\"}})\n                                         ))\n                        (dom/p (dom/text \"contact number:\" (dom/props {:class \"text\"\n                                                                       }))\n                               (ui/input phone-number\n                                         (e/fn [v] (swap! !state assoc :phone-number v))\n                                         (dom/on \"keyup\" (e/fn [keyup]\n                                                               (when-some [givenValue (contrib.str/empty->nil (->\n                                                                                                                keyup\n                                                                                                                .-target\n                                                                                                                .-value))]\n                                                                 (swap! !state assoc :button1 givenValue)\n                                                                 )))\n                                         (dom/props {:style {:name \"formal-name\"}})\n                                         ))\n                        (dom/p (dom/text \"project title:\" (dom/props {:class \"text\"\n                                                                      }))\n                               (ui/input project-title\n                                         (e/fn [v] (swap! !state assoc :project-title v))\n                                         (dom/on \"keyup\" (e/fn [keyup]\n                                                               (when-some [givenValue (contrib.str/empty->nil (->\n                                                                                                                keyup\n                                                                                                                .-target\n                                                                                                                .-value))]\n                                                                 (swap! !state assoc :button1 givenValue)\n                                                                 )))\n                                         (dom/props {:style {:name \"formal-surname\"}})\n                                         ))\n                        (dom/p (dom/text \"start date:\" (dom/props {:class \"text\"\n                                                                   }))\n                               (ui/input start-date\n                                         (e/fn [v] (swap! !state assoc :start-date v))\n                                         (dom/on \"keyup\" (e/fn [keyup]\n                                                               (when-some [givenValue (contrib.str/empty->nil (->\n                                                                                                                keyup\n                                                                                                                .-target\n                                                                                                                .-value))]\n                                                                 (swap! !state assoc :button1 givenValue)\n                                                                 )))\n                                         (dom/props {:style {:name \"brand-name\"}})\n                                         ))\n                        (dom/p (dom/text \"finish date:\" (dom/props {:class \"text\"\n                                                                    }))\n                               (ui/input finish-date\n                                         (e/fn [v] (swap! !state assoc :finish-date v))\n                                         (dom/on \"keyup\" (e/fn [keyup]\n                                                               (when-some [givenValue (contrib.str/empty->nil (->\n                                                                                                                keyup\n                                                                                                                .-target\n                                                                                                                .-value))]\n                                                                 (swap! !state assoc :button1 givenValue)\n                                                                 )))\n                                         (dom/props {:style {:name \"email\"}})\n                                         ))\n                        (dom/p (dom/text \"documents:\" (dom/props {:class \"text\"\n                                                                  }))\n                               (ui/input docs\n                                         (e/fn [v] (swap! !state assoc :docs v))\n                                         (dom/on \"keyup\" (e/fn [keyup]\n                                                               (when-some [givenValue (contrib.str/empty->nil (->\n                                                                                                                keyup\n                                                                                                                .-target\n                                                                                                                .-value))]\n                                                                 (swap! !state assoc :button1 givenValue)\n                                                                 )))\n                                         (dom/props {:style {:name \"phonenumber\"}})\n                                         ))\n\n                        (ui/button\n                          (e/fn []\n                              #_(e/server (add-project {:id                   (e/server (get-free-project-id db))\n                                                        :client-user-id       [:user/id (e/server (get-user-id-by-name (e/client (get (e/watch !state) :username)) db))]\n                                                        :client-company-id    [:company/id (e/server (get-company-id-by-name (e/client (get (e/watch !state) :username)) db))]\n                                                        :clientphonenumber    (str (get (e/watch !state) :phone-number))\n                                                        :project-title        (str (get (e/watch !state) :project-title))\n                                                        :projectstartingdate  (str (get (e/watch !state) :start-date))\n                                                        :projectfinishingdate (str (get (e/watch !state) :finish-date))\n                                                        :documents            (str (get (e/watch !state) :docs))} db conn)\n                                          )\n                                )\n                          (dom/text \"Create\")\n                          (dom/props {:class \"create-project\"\n                                      :name  \"signup-button\"\n                                      :style {:text-align \"center\"}\n\n                                      }))\n\n                        )\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )"]}