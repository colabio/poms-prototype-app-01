{"version":3,"sources":["contrib/ednish.cljc"],"mappings":"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","names":["contrib.ednish/-edn-dialect-mappings","contrib.ednish/encode","edn-str","cljs.core.reduce","p__46854","vec__46855","cljs.core.nth","a","k","v","clojure.string/replace","contrib.ednish/decode","ednish-str","p__46861","vec__46862","clojure.set/map-invert","contrib.ednish/generated__contrib_ednish_37","js/contrib","js/contrib.ednish","js/contrib.ednish.t_contrib$ednish47103","contrib.ednish/t_contrib$ednish47103","_47105","meta47104","cljs.core/PROTOCOL_SENTINEL","unused__14959__auto__","self__","G__47116","js/Error","args47110","cljs.core/aclone","done-47063","___14619__auto__","RCF__done!","hyperfiddle.rcf/async-notifier","values__10703__auto__","cljs.core/List","result__10704__auto__","cljs.core.apply","hyperfiddle.rcf/=","cljs.test/do-report","cljs.core/cons","cljs.core/first","t__10691__auto__","e47122","e47129","e47137","e47144","e47151","this__5330__auto__","writer__5331__auto__","opt__5332__auto__","cljs.core/-write","contrib.ednish/->t_contrib$ednish47103","hyperfiddle.rcf/*enabled*","cljs.test/run-block","cljs.test/test-var-block*","cljs.core.pr_str","contrib.ednish/encode-uri","cljs.core.comp","contrib.rfc3986/encode-pchar","cljs.core/pr-str","contrib.ednish/decode-uri","clojure.edn/read-string","contrib.rfc3986/decode-pchar","contrib.ednish/generated__contrib_ednish_48","js/contrib.ednish.t_contrib$ednish47300","contrib.ednish/t_contrib$ednish47300","_47302","meta47301","G__47309","args47305","done-47240","cljs.test.update_current_env_BANG_","cljs.core/conj","e47317","e47330","e47338","cljs.test/update-current-env!","cljs.core/rest","contrib.ednish/->t_contrib$ednish47300","contrib.ednish/discard-leading-slash","path","clojure.string/starts-with?","cljs.core.subs","contrib.ednish/decode-path","read-edn-str","cljs.core._EQ_"],"sourcesContent":["(ns contrib.ednish\n  (:require clojure.set\n            clojure.string\n            clojure.edn\n            contrib.rfc3986\n            [hyperfiddle.rcf :refer [tests]]))\n\n; https://tools.ietf.org/html/rfc2396#section-2.4.3\n;\n; unwise = \"{\" | \"}\" | \"|\" | \"\\\" | \"^\" | \"[\" | \"]\" | \"`\"\n\n(def -edn-dialect-mappings\n  {\\space \\,\n   \\\" \\'\n   \\# \\~\n   \\/ \\!\n   ;\\{ \\( \\} \\)\n   \\[ \\( \\] \\)\n   })\n\n; Paste this into chrome and it will display properly\n; https://ko.wikipedia.org/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC:%EB%8C%80%EB%AC%B8\n\n(defn encode \"Re-encode an edn-string to url-safe dialect of edn-ish. Vectors, sets and maps\ncoalesce into lists and are not disambiguated.\"\n  [edn-str]\n  (reduce (fn [a [k v]]\n            (clojure.string/replace a k v))\n          edn-str\n          -edn-dialect-mappings))\n\n(defn decode [ednish-str]\n  (reduce (fn [a [k v]] (clojure.string/replace a k v))\n          ednish-str\n          (clojure.set/map-invert -edn-dialect-mappings)))\n\n(tests\n  (encode (pr-str :hyperfiddle.blog/post)) := \":hyperfiddle.blog!post\"\n  (encode (pr-str :a!b)) := \":a!b\"\n  (encode (pr-str \"kobe\")) := \"'kobe'\"\n  (encode (pr-str #{\"events\" \"news\"})) := \"~{'news','events'}\"\n  (encode (pr-str #uuid \"07655f77-608d-472b-bc5e-86fcecc40b00\"))\n  := \"~uuid,'07655f77-608d-472b-bc5e-86fcecc40b00'\")\n\n(def encode-uri (comp contrib.rfc3986/encode-pchar encode pr-str))\n(def decode-uri (comp clojure.edn/read-string decode contrib.rfc3986/decode-pchar))\n\n(tests\n  \"url encoding\"\n  (encode-uri \"|\") := \"'%7C'\"\n  (decode-uri \"'%7C'\") := \"|\"\n\n  (encode-uri \"!$&'[]()*+,;=|\") := \"'!$&'()()*+,;=%7C'\"\n  ;(decode-uri \"'!$&'()()*+,;=%7C'\") := \"!$&'()()*+,;=|\" -- todo why broken?\n  )\n\n;(tests -- No reader function for tag uri -- this test passes in hf-2020\n;  \"ednish-tunneling\"\n;  (def v #uri \"datomic:free://datomic:4334/~dustin.getz\")\n;  (def encoded (encode-ednish (pr-str v)))\n;  (pr-str v) := _\n;  (encode-ednish (pr-str v)) := \"~uri,'datomic:free:!!datomic:4334!~dustin.getz'\"\n;  ;(is (= (decode-ednish encoded) (pr-str v)))\n;  ; \"#uri \\\"datomic:free://datomic:4334/#dustin.getz\\\"\"\n;  )\n\n(defn discard-leading-slash [path]\n  (if (clojure.string/starts-with? path \"/\") (subs path 1) path))\n\n(defn decode-path [path read-edn-str]\n   {:pre [(string? path) (some? read-edn-str)]}\n   (when-not (= path \"/\")\n     (let [path (discard-leading-slash path)]\n       (decode-uri path))))\n"]}